# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  lint:
    name: lint code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/setup-python-env
        # flake8 and pytest are included in the pyproject.yaml
      - name: run linter
        run: |
          # stop the build if there are Python syntax errors or undefined names
          uv run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          uv run flake8 . --count --max-complexity=10 --max-line-length=127 --statistics
        
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: ./.github/actions/setup-python-env
      - name: Run tests
        # For example, using `pytest`
        run: uv run pytest tests/ --doctest-modules --junitxml=junit/test-results.xml --cov=com --cov-report=xml --cov-report=html

      - name: Publish test results
        uses: actions/upload-artifact@v4
        with:
          name: junit-results
          path: junit/test-results.xml

      
      #when repo becomes private this will need mods
      - name: check diffs
        uses: coverallsapp/github-action@v2
        with:
          path-to-lcov: coverage.xml


      #TODO, for microservice intergrations and deployment, needs docker image maintanace and to publish 

        